# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class TextMessageObject(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, text_message: str=None):
        """
        TextMessageObject - a model defined in Swagger

        :param text_message: The text_message of this TextMessageObject.
        :type text_message: str
        """
        self.swagger_types = {
            'text_message': str
        }

        self.attribute_map = {
            'text_message': 'textMessage'
        }

        self._text_message = text_message

    @classmethod
    def from_dict(cls, dikt) -> 'TextMessageObject':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The textMessageObject of this TextMessageObject.
        :rtype: TextMessageObject
        """
        return deserialize_model(dikt, cls)

    @property
    def text_message(self) -> str:
        """
        Gets the text_message of this TextMessageObject.

        :return: The text_message of this TextMessageObject.
        :rtype: str
        """
        return self._text_message

    @text_message.setter
    def text_message(self, text_message: str):
        """
        Sets the text_message of this TextMessageObject.

        :param text_message: The text_message of this TextMessageObject.
        :type text_message: str
        """
        if text_message is None:
            raise ValueError("Invalid value for `text_message`, must not be `None`")

        self._text_message = text_message

