# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class S124DataSet(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, data_set: str=None):
        """
        S124DataSet - a model defined in Swagger

        :param data_set: The data_set of this S124DataSet.
        :type data_set: str
        """
        self.swagger_types = {
            'data_set': str
        }

        self.attribute_map = {
            'data_set': 'dataSet'
        }

        self._data_set = data_set

    @classmethod
    def from_dict(cls, dikt) -> 'S124DataSet':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The S124DataSet of this S124DataSet.
        :rtype: S124DataSet
        """
        return deserialize_model(dikt, cls)

    @property
    def data_set(self) -> str:
        """
        Gets the data_set of this S124DataSet.

        :return: The data_set of this S124DataSet.
        :rtype: str
        """
        return self._data_set

    @data_set.setter
    def data_set(self, data_set: str):
        """
        Sets the data_set of this S124DataSet.

        :param data_set: The data_set of this S124DataSet.
        :type data_set: str
        """
        if data_set is None:
            raise ValueError("Invalid value for `data_set`, must not be `None`")

        self._data_set = data_set

