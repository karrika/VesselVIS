---
swagger: "2.0"
info:
  description: "Voyage Information Service API facing SeaSWIM through SSC exposing\
    \ interfaces to SeaSWIM stakeholders"
  version: "1.0.0"
  title: "STM Voyage Information Service SeaSWIM API"
  termsOfService: "http://helloreverb.com/terms/"
  contact:
    name: "SMA"
    url: "http://sjofartsverket.se"
    email: "per.lofbom@sjofartsverket.se"
  license:
    name: "SMA"
    url: "http://opensource.org"
host: "stm.furuno.fi:8002"
basePath: "/8320767"
schemes:
- "http"
consumes:
- "application/json;charset=UTF-8"
produces:
- "application/json;charset=UTF-8"
paths:
  /voyagePlans:
    get:
      description: "Returns active VoyagePlans"
      operationId: "get_voyage_plans"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "uvid"
        in: "query"
        description: "Unique identity (URN) of a voyageplan"
        required: false
        type: "string"
        pattern: "urn:mrn:"
      - name: "routeStatus"
        in: "query"
        description: "Status of a route for a voyageplan: 1-Original   2-Planned_for_voyage\
          \    3-Optimized 4-Cross_Checked 5-Safety_Checked    6-Approved  7-Used_for_monitoring\
          \   8-Inactive"
        required: false
        type: "string"
        enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/GetVPResponseObject"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden (Not authorized request forwarded to operator)"
        404:
          description: "Not Found (the requested voyagePlan is not found)"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Upload VoyagePlan to VIS from other services i.e. Route Optimization\
        \ service."
      operationId: "upload_voyage_plan"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "uvid"
        in: "query"
        description: "UVID of VoyagePlan to upload."
        required: true
        type: "string"
        pattern: "urn:mrn:"
      - name: "deliveryAckEndPoint"
        in: "query"
        description: "Acknowledgement required, optionally an URL could be provided\
          \ to send acknowledgment."
        required: false
        type: "string"
      - in: "body"
        name: "voyagePlan"
        description: "Voyage Plan to add to VIS message db"
        required: true
        schema:
          $ref: "#/definitions/voyagePlan"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /textMessage:
    post:
      description: "Upload text message to VIS from other services i.e. Route Optimization\
        \ service."
      operationId: "upload_text_message"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "deliveryAckEndPoint"
        in: "query"
        description: "Acknowledgement required, optionally an URL could be provided\
          \ to send acknowledgment."
        required: false
        type: "string"
      - in: "body"
        name: "textMessageObject"
        description: "Text message to add to VIS message db for delivery to STM Onboard\
          \ system"
        required: true
        schema:
          $ref: "#/definitions/textMessageObject"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /area:
    post:
      description: "Upload area message to VIS from other services i.e. Route Check\
        \ service as an informational message"
      operationId: "upload_area"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "deliveryAckEndPoint"
        in: "query"
        description: "Acknowledgement required, optionally an URL could be provided\
          \ to send acknowledgment."
        required: false
        type: "string"
      - in: "body"
        name: "area"
        description: "Area message to add to VIS message db for delivery to STM Onboard\
          \ system as additional information"
        required: true
        schema:
          $ref: "#/definitions/S124DataSet"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /voyagePlans/subscription:
    post:
      description: "Request subscription for active Voyage Plan from other services\
        \ i.e. Enhanced Monitoring"
      operationId: "subscribe_to_voyage_plan"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "callbackEndpoint"
        in: "query"
        description: "An endpoint (URI) specifying the address where the subscribed\
          \ data is to be posted"
        required: true
        type: "string"
      - name: "uvid"
        in: "query"
        description: "Unique identity (URN) of a voyageplan"
        required: false
        type: "string"
        pattern: "urn:mrn:"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden (Not authorized request forwarded to operator)"
        404:
          description: "Not Found (the requested Voyage Plan is not found)"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    delete:
      description: "Remove subscription for active Voyage Plan from other services\
        \ i.e. Enhanced Monitoring"
      operationId: "remove_voyage_plan_subscription"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - name: "callbackEndpoint"
        in: "query"
        description: "An endpoint (URI) specifying the address where the subscribed\
          \ data is to be posted"
        required: true
        type: "string"
      - name: "uvid"
        in: "query"
        description: "Unique identity (URN) of a voyageplan"
        required: false
        type: "string"
        pattern: "urn:mrn:"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be auhtenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden"
        404:
          description: "Not Found (the requested Voyage Plan is not found)"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /acknowledgement:
    post:
      description: "Endpoint for receipt of acknowledgements"
      operationId: "acknowledgement"
      produces:
      - "application/json;charset=UTF-8"
      parameters:
      - in: "body"
        name: "deliveryAck"
        description: "Acknowledgement "
        required: true
        schema:
          $ref: "#/definitions/deliveryAck"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/responseObj"
        400:
          description: "Bad Request"
        401:
          description: "Unauthorized (the user cannot be authenticated in the Identity\
            \ Registry)"
        403:
          description: "Forbidden"
        500:
          description: "Internal Server Error"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  voyagePlan:
    type: "object"
    required:
    - "route"
    properties:
      route:
        type: "string"
  GetVPResponseObject:
    type: "object"
    required:
    - "lastInteractionTime"
    properties:
      lastInteractionTime:
        type: "string"
        format: "date-time"
      voyagePlan:
        type: "array"
        items:
          $ref: "#/definitions/voyagePlan"
  responseObj:
    type: "object"
    required:
    - "body"
    properties:
      body:
        type: "string"
  textMessageObject:
    type: "object"
    required:
    - "textMessage"
    properties:
      textMessage:
        type: "string"
  S124DataSet:
    type: "object"
    required:
    - "dataSet"
    properties:
      dataSet:
        type: "string"
  deliveryAck:
    type: "object"
    required:
    - "ackResult"
    - "fromId"
    - "fromName"
    - "id"
    - "referenceId"
    - "timeOfDelivery"
    - "toId"
    - "toName"
    properties:
      id:
        type: "string"
        description: "Id for the ACK"
      referenceId:
        type: "string"
        description: "Reference to delivered message (URN)"
        pattern: "urn:mrn:"
      timeOfDelivery:
        type: "string"
        format: "date-time"
        description: "Time of delivery"
      fromId:
        type: "string"
        description: "Identity of source (sender) of message that have been delivered\
          \ (URN)"
        pattern: "urn:mrn:"
      fromName:
        type: "string"
        description: "Friendly name of sender"
      toId:
        type: "string"
        description: "Identity of target (recipient) of message delivery (URN)"
        pattern: "urn:mrn:"
      toName:
        type: "string"
        description: "Friendly name of recipient"
      ackResult:
        type: "string"
  errorModel:
    type: "object"
    required:
    - "code"
    - "errorModelId"
    - "message"
    properties:
      errorModelId:
        type: "integer"
        format: "int64"
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
